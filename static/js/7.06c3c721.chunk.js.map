{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["setContent","process","Component","newItemLoading","_jsx","Spinner","ErrorMessage","Error","ComicsList","comicsList","setComicsList","useState","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","getAllComics","setProcess","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","_jsxs","className","children","arr","items","map","item","i","Link","to","concat","id","src","thumbnail","alt","title","price","renderItems","disabled","style","display","onClick","ComicsPage","_Fragment","AppBanner","width","height","objectFit","margin","img","request","clearError","useHttp","useCallback","async","url","method","arguments","undefined","body","headers","response","fetch","ok","status","json","e","_apiBase","_apiKey","_transformCharacter","char","name","description","slice","path","extension","homepage","urls","wiki","comics","_transformComics","pageCount","language","textObjects","prices","getAllCharacters","res","data","results","getCharacter","getCharacterByName","getComic","avengers","avengersLogo"],"mappings":"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","file":"static/js/7.06c3c721.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nimport \"./comicsList.scss\";\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n  switch (process) {\r\n    case \"waiting\":\r\n      return <Spinner />;\r\n    case \"loading\":\r\n      return newItemLoading ? <Component /> : <Spinner />;\r\n    case \"confirmed\":\r\n      return <Component />;\r\n    case \"error\":\r\n      return <ErrorMessage />;\r\n    default:\r\n      throw new Error(\"Unexpected process state\");\r\n  }\r\n};\r\n\r\nconst ComicsList = () => {\r\n  const [comicsList, setComicsList] = useState([]);\r\n  const [newItemLoading, setnewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(0);\r\n  const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n  const { getAllComics, process, setProcess } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\r\n    getAllComics(offset)\r\n      .then(onComicsListLoaded)\r\n      .then(() => setProcess(\"confirmed\"));\r\n  };\r\n\r\n  const onComicsListLoaded = (newComicsList) => {\r\n    let ended = false;\r\n    if (newComicsList.length < 8) {\r\n      ended = true;\r\n    }\r\n    setComicsList([...comicsList, ...newComicsList]);\r\n    setnewItemLoading(false);\r\n    setOffset(offset + 8);\r\n    setComicsEnded(ended);\r\n  };\r\n\r\n  function renderItems(arr) {\r\n    const items = arr.map((item, i) => {\r\n      return (\r\n        <li className=\"comics__item\" key={i}>\r\n          <Link to={`/comics/${item.id}`}>\r\n            <img\r\n              src={item.thumbnail}\r\n              alt={item.title}\r\n              className=\"comics__item-img\"\r\n            />\r\n            <div className=\"comics__item-name\">{item.title}</div>\r\n            <div className=\"comics__item-price\">{item.price}</div>\r\n          </Link>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return <ul className=\"comics__grid\">{items}</ul>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"comics__list\">\r\n      {setContent(process, () => renderItems(comicsList), newItemLoading)}\r\n      <button\r\n        disabled={newItemLoading}\r\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\r\n        className=\"button button__main button__long\"\r\n        onClick={() => onRequest(offset)}\r\n      >\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComicsList;\r\n","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n  const { request, clearError, process, setProcess } = useHttp();\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=c5d6fc8b83116d92ed468ce36bac6c62';\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : 'There is no description for this character',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || 'There is no description',\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : 'No information about the number of pages',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || 'en-us',\r\n      price: comics.prices.price ? `${comics.prices.price}$` : 'not available',\r\n    };\r\n  };\r\n\r\n  return {\r\n    process,\r\n    setProcess,\r\n    clearError,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getCharacterByName,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [process, setProcess] = useState(\"waiting\");\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setProcess(\"loading\");\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        return data;\r\n      } catch (e) {\r\n        setProcess(\"error\");\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setProcess(\"loading\"), []);\r\n\r\n  return { request, clearError, process, setProcess };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;"],"sourceRoot":""}