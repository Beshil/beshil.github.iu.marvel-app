{"version":3,"sources":["resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/charSearchForm/CharSearchForm.js","resources/img/vision.png","components/pages/MainPage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js"],"names":["View","_ref","data","name","description","thumbnail","homepage","wiki","imgStyle","objectFit","_jsxs","className","children","_jsx","src","alt","style","href","RandomChar","char","setChar","useState","getCharacter","clearError","process","setProcess","useMarvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","id","Math","floor","random","then","setContent","onClick","mjolnir","CharList","onCharSelected","charList","setCharList","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","getAllCharacters","onRequest","initial","onCharListLoaded","newCharList","ended","length","prev","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","elements","useMemo","Component","Spinner","ErrorMessage","Error","arr","items","map","i","CSSTransition","timeout","classNames","tabIndex","ref","el","onKeyPress","e","key","TransitionGroup","component","renderItems","disabled","display","_ref2","comics","_Fragment","CharInfo","charId","ErrorBoundary","constructor","arguments","state","error","componentDidCatch","errorInfo","console","log","this","setState","render","props","CharSearchForm","loading","getCharacterByName","errorMessage","results","Link","to","concat","Formik","initialValues","charName","validationSchema","Yup","required","onSubmit","Form","htmlFor","Field","type","placeholder","FormikErrorMessage","MainPage","selectedChar","Helmet","content","decoration","width","height","margin","img","request","useHttp","useCallback","async","url","method","undefined","body","headers","response","fetch","ok","status","json","_apiBase","_apiKey","_transformCharacter","slice","path","extension","urls","_transformComics","title","pageCount","language","textObjects","price","prices","res","getAllComics","getComic","Skeleton"],"mappings":"kKAAe,G,MAAA,IAA0B,qC,OCOzC,MA2CMA,EAAOC,IAAe,IAAd,KAAEC,GAAMD,EACpB,MAAM,KAAEE,EAAI,YAAEC,EAAW,UAAEC,EAAS,SAAEC,EAAQ,KAAEC,GAASL,EACzD,IAAIM,EAAW,CAAEC,UAAW,SAQ5B,MALE,wEADAJ,IAGAG,EAAW,CAAEC,UAAW,YAIxBC,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAChCC,cAAA,OACEC,IAAKT,EACLU,IAAI,mBACJJ,UAAU,kBACVK,MAAOR,IAETE,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC/BC,cAAA,KAAGF,UAAU,mBAAkBC,SAAET,IACjCU,cAAA,KAAGF,UAAU,oBAAmBC,SAAER,IAClCM,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC/BC,cAAA,KAAGI,KAAMX,EAAUK,UAAU,sBAAqBC,SAChDC,cAAA,OAAKF,UAAU,QAAOC,SAAC,eAEzBC,cAAA,KAAGI,KAAMV,EAAMI,UAAU,2BAA0BC,SACjDC,cAAA,OAAKF,UAAU,QAAOC,SAAC,qBAQpBM,MA7EIA,KACjB,MAAOC,EAAMC,GAAWC,mBAAS,KAC3B,aAAEC,EAAY,WAAEC,EAAU,QAAEC,EAAO,WAAEC,GAAeC,cAC1DC,qBAAU,KACRC,IACA,MAAMC,EAAUC,YAAYF,EAAY,KAExC,MAAO,KACLG,cAAcF,MAEf,IAEH,MAAMG,EAAgBb,IACpBC,EAAQD,IAGJS,EAAaA,KACjBL,IACA,MAAMU,EAAKC,KAAKC,MAAmB,IAAbD,KAAKE,SAAiC,QAC5Dd,EAAaW,GACVI,KAAKL,GACLK,MAAK,IAAMZ,EAAW,gBAG3B,OACEf,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACxB0B,YAAWd,EAASxB,EAAMmB,GAC3BT,eAAA,OAAKC,UAAU,qBAAoBC,SAAA,CACjCF,eAAA,KAAGC,UAAU,oBAAmBC,SAAA,CAAC,8BAE/BC,cAAA,SAAM,4CAGRA,cAAA,KAAGF,UAAU,oBAAmBC,SAAC,0BACjCC,cAAA,UAAQ0B,QAASX,EAAYjB,UAAU,sBAAqBC,SAC1DC,cAAA,OAAKF,UAAU,QAAOC,SAAC,aAEzBC,cAAA,OAAKC,IAAK0B,EAASzB,IAAI,UAAUJ,UAAU,kC,wCCsFpC8B,MA3GExC,IAAyB,IAAxB,eAAEyC,GAAgBzC,EAClC,MAAO0C,EAAUC,GAAevB,mBAAS,KAClCwB,EAAgBC,GAAqBzB,oBAAS,IAC9C0B,EAAQC,GAAa3B,mBAAS,MAC9B4B,EAAWC,GAAgB7B,oBAAS,IAErC,iBAAE8B,EAAgB,QAAE3B,EAAO,WAAEC,GAAeC,cAElDC,qBAAU,KACRyB,EAAUL,GAAQ,KACjB,IAEH,MAAMK,EAAYA,CAACL,EAAQM,KACfP,GAAVO,GACAF,EAAiBJ,GACdV,KAAKiB,GACLjB,MAAK,IAAMZ,EAAW,gBAGrB6B,EAAoBC,IACxB,IAAIC,GAAQ,EACRD,EAAYE,OAAS,IACvBD,GAAQ,GAEVZ,GAAaD,GAAa,IAAIA,KAAaY,KAE3CT,GAAkB,GAClBI,EAAaM,GACbR,GAAWU,GAASA,EAAO,KAGvBC,EAAWC,iBAAO,IAElBC,EAAe5B,IACnB0B,EAASG,QAAQC,SAASC,GACxBA,EAAKC,UAAUC,OAAO,yBAExBP,EAASG,QAAQ7B,GAAIgC,UAAUE,IAAI,uBACnCR,EAASG,QAAQ7B,GAAImC,SA6CjBC,EAAWC,mBAAQ,IAjGRhC,EAACd,EAAS+C,EAAW1B,KACtC,OAAQrB,GACN,IAAK,UACH,OAAOX,cAAC2D,IAAO,IACjB,IAAK,UACH,OAAO3B,EAAiBhC,cAAC0D,EAAS,IAAM1D,cAAC2D,IAAO,IAClD,IAAK,YACH,OAAO3D,cAAC0D,EAAS,IACnB,IAAK,QACH,OAAO1D,cAAC4D,IAAY,IACtB,QACE,MAAM,IAAIC,MAAM,8BAuFXpC,CAAWd,GAAS,IA3CRmD,KACnB,MAAMC,EAAQD,EAAIE,KAAI,CAACb,EAAMc,KAC3B,IAAItE,EAAW,CAAEC,UAAW,SAQ5B,MALE,wEADAuD,EAAK3D,YAGLG,EAAW,CAAEC,UAAW,UAIxBI,cAACkE,IAAa,CAAeC,QAAS,IAAKC,WAAW,aAAYrE,SAChEF,eAAA,MACEC,UAAU,aACVuE,SAAU,EACVC,IAAMC,GAAQzB,EAASG,QAAQgB,GAAKM,EAEpC7C,QAASA,KACPG,EAAesB,EAAK/B,IACpB4B,EAAYiB,IAEdO,WAAaC,IACG,MAAVA,EAAEC,KAAyB,UAAVD,EAAEC,MACrB7C,EAAesB,EAAK/B,IACpB4B,EAAYiB,KAEdlE,SAAA,CAEFC,cAAA,OAAKC,IAAKkD,EAAK3D,UAAWU,IAAKiD,EAAK7D,KAAMa,MAAOR,IACjDK,cAAA,OAAKF,UAAU,aAAYC,SAAEoD,EAAK7D,SAb7B6D,EAAK/B,KALM+B,EAAK/B,OAwB7B,OACEpB,cAAA,MAAIF,UAAU,aAAYC,SACxBF,eAAC8E,IAAe,CAACC,UAAW,KAAK7E,SAAA,CAAC,IAAEgE,QAMPc,CAAY/C,IAAWE,IAEvD,CAACrB,IAEJ,OACEd,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACxByD,EACDxD,cAAA,UACEF,UAAU,mCACVgF,SAAU9C,EACV7B,MAAO,CAAE4E,QAAS3C,EAAY,OAAS,SACvCV,QAASA,IAAMa,EAAUL,GAAQnC,SAEjCC,cAAA,OAAKF,UAAU,QAAOC,SAAC,oB,MCjH/B,MA2BMZ,EAAO6F,IAAe,IAAd,KAAE3F,GAAM2F,EACpB,MAAM,KAAE1F,EAAI,YAAEC,EAAW,UAAEC,EAAS,SAAEC,EAAQ,KAAEC,EAAI,OAAEuF,GAAW5F,EAEjE,IAAIM,EAAW,CAAEC,UAAW,SAQ5B,MALE,wEADAJ,IAGAG,EAAW,CAAEC,UAAW,YAIxBC,eAAAqF,WAAA,CAAAnF,SAAA,CACEF,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC3BC,cAAA,OAAKC,IAAKT,EAAWU,IAAKZ,EAAMa,MAAOR,IACvCE,eAAA,OAAAE,SAAA,CACEC,cAAA,OAAKF,UAAU,kBAAiBC,SAAET,IAClCO,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACzBC,cAAA,KAAGI,KAAMX,EAAUK,UAAU,sBAAqBC,SAChDC,cAAA,OAAKF,UAAU,QAAOC,SAAC,eAEzBC,cAAA,KAAGI,KAAMV,EAAMI,UAAU,2BAA0BC,SACjDC,cAAA,OAAKF,UAAU,QAAOC,SAAC,oBAK/BC,cAAA,OAAKF,UAAU,cAAaC,SAAER,IAC9BS,cAAA,OAAKF,UAAU,eAAcC,SAAC,YAC9BF,eAAA,MAAIC,UAAU,oBAAmBC,SAAA,CAC9BkF,EAAOrC,OAAS,EAAI,KAAO,yCAC3BqC,EAAOjB,KAAI,CAACb,EAAMc,KAEjB,KAAIA,EAAI,GACR,OACEjE,cAAA,MAAYF,UAAU,oBAAmBC,SACtCoD,EAAK7D,MADC2E,aAcNkB,MA5EE/F,IAAiB,IAAhB,OAAEgG,GAAQhG,EAC1B,MAAOkB,EAAMC,GAAWC,mBAAS,OAE3B,aAAEC,EAAY,WAAEC,EAAU,QAAEC,EAAO,WAAEC,GAAeC,cAE1DC,qBAAU,KACRC,MACC,CAACqE,IAEJ,MAAMrE,EAAaA,KACZqE,IAIL1E,IACAD,EAAa2E,GACV5D,KAAKL,GACLK,MAAK,IAAMZ,EAAW,iBAGrBO,EAAgBb,IACpBC,EAAQD,IAGV,OAAOT,eAAA,OAAKC,UAAU,aAAYC,SAAA,CAAC,IAAE0B,YAAWd,EAASxB,EAAMmB,OC5BjE,MAAM+E,UAAsB3B,YAAU4B,cAAA,SAAAC,WAAA,KACpCC,MAAQ,CACNC,OAAO,GAGTC,kBAAkBD,EAAOE,GACvBC,QAAQC,IAAIJ,EAAOE,GACnBG,KAAKC,SAAS,CACZN,OAAO,IAIXO,SACE,OAAIF,KAAKN,MAAMC,MACNzF,cAAC4D,IAAY,IAGfkC,KAAKG,MAAMlG,UAIPsF,Q,gCCkDAa,MAhEQA,KACnB,MAAO5F,EAAMC,GAAWC,mBAAS,OAC3B,QAAC2F,EAAO,MAAEV,EAAK,mBAAEW,EAAkB,WAAE1F,GAAcG,cAEnDM,EAAgBb,IAClBC,EAAQD,IAUN+F,EAAeZ,EAAQzF,cAAA,OAAKF,UAAU,8BAA6BC,SAACC,cAAC4D,IAAY,MAAY,KAC7F0C,EAAWhG,EAAcA,EAAKsC,OAAS,EAC7B/C,eAAA,OAAKC,UAAU,uBAAsBC,SAAA,CACjCF,eAAA,OAAKC,UAAU,uBAAsBC,SAAA,CAAC,mBAAiBO,EAAK,GAAGhB,KAAK,YACpEU,cAACuG,IAAI,CAACC,GAAE,eAAAC,OAAiBnG,EAAK,GAAGc,IAAMtB,UAAU,2BAA0BC,SACvEC,cAAA,OAAKF,UAAU,QAAOC,SAAC,iBAG/BC,cAAA,OAAKF,UAAU,qBAAoBC,SAAC,8DAP5B,KAWxB,OACIF,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAC9BC,cAAC0G,IAAM,CACHC,cAAiB,CACbC,SAAU,IAEdC,iBAAoBC,IAAW,CAC3BF,SAAUE,MAAaC,SAAS,4BAEpCC,SAAa5H,IAAiB,IAAhB,SAACwH,GAASxH,EA5BhBE,QA6BOsH,EA5BvBlG,IAEA0F,EAAmB9G,GACdkC,KAAKL,IA0BApB,SAEFF,eAACoH,IAAI,CAAAlH,SAAA,CACDC,cAAA,SAAOF,UAAU,qBAAqBoH,QAAQ,WAAUnH,SAAC,iCACzDF,eAAA,OAAKC,UAAU,uBAAsBC,SAAA,CACjCC,cAACmH,IAAK,CACF/F,GAAG,WACH9B,KAAK,WACL8H,KAAK,OACLC,YAAY,eAChBrH,cAAA,UACIoH,KAAK,SACLtH,UAAU,sBACVgF,SAAUqB,EAAQpG,SAClBC,cAAA,OAAKF,UAAU,QAAOC,SAAC,cAG/BC,cAACsH,IAAkB,CAAC1C,UAAU,MAAM9E,UAAU,qBAAqBR,KAAK,kBAG/EgH,EACAD,MCrEE,MAA0B,mCC6C1BkB,UAlCEA,KACf,MAAOC,EAAcjH,GAAWC,mBAAS,MAMzC,OACEX,eAAAqF,WAAA,CAAAnF,SAAA,CACEF,eAAC4H,IAAM,CAAA1H,SAAA,CACLC,cAAA,QAAMV,KAAK,cAAcoI,QAAQ,8BACjC1H,cAAA,SAAAD,SAAO,iCAETC,cAACqF,EAAa,CAAAtF,SACZC,cAACK,EAAU,MAEbR,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC5BC,cAACqF,EAAa,CAAAtF,SACZC,cAAC4B,EAAQ,CAACC,eAfMT,IACtBb,EAAQa,QAgBJvB,eAAA,OAAAE,SAAA,CACEC,cAACqF,EAAa,CAAAtF,SACZC,cAACmF,EAAQ,CAACC,OAAQoC,MAEpBxH,cAACqF,EAAa,CAAAtF,SACZC,cAACkG,EAAc,YAIrBlG,cAAA,OAAKF,UAAU,gBAAgBG,IAAK0H,EAAYzH,IAAI,gB,gCCxC3C,UAA0B,kC,OCQ1B0D,IANMA,IAEb5D,cAAA,OAAKG,MAAO,CAAE4E,QAAS,QAAS6C,MAAO,QAASC,OAAQ,QAAQjI,UAAW,UAAWkI,OAAQ,UAAY7H,IAAK8H,EAAK7H,IAAI,W,2CCwEjHW,IA1EUA,KACvB,MAAM,QAAEmH,EAAO,WAAEtH,EAAU,QAAEC,EAAO,WAAEC,GCDjBqH,MACrB,MAAOtH,EAASC,GAAcJ,mBAAS,WA+BvC,MAAO,CAAEwH,QA7BOE,uBACdC,eACEC,GAII,IAHJC,EAAM9C,UAAA3C,OAAA,QAAA0F,IAAA/C,UAAA,GAAAA,UAAA,GAAG,MACTgD,EAAIhD,UAAA3C,OAAA,QAAA0F,IAAA/C,UAAA,GAAAA,UAAA,GAAG,KACPiD,EAAOjD,UAAA3C,OAAA,QAAA0F,IAAA/C,UAAA,GAAAA,UAAA,GAAG,CAAE,eAAgB,oBAE5B3E,EAAW,WAEX,IACE,MAAM6H,QAAiBC,MAAMN,EAAK,CAAEC,SAAQE,OAAMC,YAElD,IAAKC,EAASE,GACZ,MAAM,IAAI9E,MAAM,mBAAD4C,OAAoB2B,EAAG,cAAA3B,OAAagC,EAASG,SAK9D,aAFmBH,EAASI,OAG5B,MAAOpE,GAEP,MADA7D,EAAW,SACL6D,KAGV,IAKgB/D,WAFCwH,uBAAY,IAAMtH,EAAW,YAAY,IAE9BD,UAASC,eD/BcqH,GAC/Ca,EAAW,4CACXC,EAAU,0CAgCVC,EAAuB1I,IACpB,CACLc,GAAId,EAAKc,GACT9B,KAAMgB,EAAKhB,KACXC,YAAae,EAAKf,YAAW,GAAAkH,OACtBnG,EAAKf,YAAY0J,MAAM,EAAG,KAAI,OACjC,6CACJzJ,UAAWc,EAAKd,UAAU0J,KAAO,IAAM5I,EAAKd,UAAU2J,UACtD1J,SAAUa,EAAK8I,KAAK,GAAGhB,IACvB1I,KAAMY,EAAK8I,KAAK,GAAGhB,IACnBnD,OAAQ3E,EAAK2E,OAAOlB,QAGlBsF,EAAoBpE,IACjB,CACL7D,GAAI6D,EAAO7D,GACXkI,MAAOrE,EAAOqE,MACd/J,YAAa0F,EAAO1F,aAAe,0BACnCgK,UAAWtE,EAAOsE,UAAS,GAAA9C,OACpBxB,EAAOsE,UAAS,OACnB,2CACJ/J,UAAWyF,EAAOzF,UAAU0J,KAAO,IAAMjE,EAAOzF,UAAU2J,UAC1DK,SAAUvE,EAAOwE,YAAYD,UAAY,QACzCE,MAAOzE,EAAO0E,OAAOD,MAAK,GAAAjD,OAAMxB,EAAO0E,OAAOD,MAAK,KAAM,kBAI7D,MAAO,CACL/I,UACAC,aACAF,aACA4B,iBA5DuB6F,iBAAiC,IAA1BjG,EAAMqD,UAAA3C,OAAA,QAAA0F,IAAA/C,UAAA,GAAAA,UAAA,GAFlB,IAGlB,MAAMqE,QAAY5B,EAAQ,GAADvB,OACpBqC,EAAQ,8BAAArC,OAA6BvE,EAAM,KAAAuE,OAAIsC,IAEpD,OAAOa,EAAIvK,KAAKiH,QAAQtC,IAAIgF,IAyD5BvI,aAtDmB0H,UACnB,MAAMyB,QAAY5B,EAAQ,GAADvB,OAAIqC,EAAQ,eAAArC,OAAcrF,EAAE,KAAAqF,OAAIsC,IACzD,OAAOC,EAAoBY,EAAIvK,KAAKiH,QAAQ,KAqD5CF,mBAlDyB+B,gBACPH,EAAQ,GAADvB,OAAIqC,EAAQ,oBAAArC,OAAmBnH,EAAI,KAAAmH,OAAIsC,KACrD1J,KAAKiH,QAAQtC,IAAIgF,GAiD5Ba,aA9CmB1B,iBAAuB,IAAhBjG,EAAMqD,UAAA3C,OAAA,QAAA0F,IAAA/C,UAAA,GAAAA,UAAA,GAAG,EACnC,MAAMqE,QAAY5B,EAAQ,GAADvB,OACpBqC,EAAQ,8CAAArC,OAA6CvE,EAAM,KAAAuE,OAAIsC,IAEpE,OAAOa,EAAIvK,KAAKiH,QAAQtC,IAAIqF,IA2C5BS,SAxCe3B,UACf,MAAMyB,QAAY5B,EAAQ,GAADvB,OAAIqC,EAAQ,WAAArC,OAAUrF,EAAE,KAAAqF,OAAIsC,IACrD,OAAOM,EAAiBO,EAAIvK,KAAKiH,QAAQ,Q,mEEf9ByD,MAjBEA,IAETlK,eAAAqF,WAAA,CAAAnF,SAAA,CACIC,cAAA,KAAGF,UAAU,eAAcC,SAAC,iDAC5BF,eAAA,OAAKC,UAAU,WAAUC,SAAA,CACrBF,eAAA,OAAKC,UAAU,yBAAwBC,SAAA,CACnCC,cAAA,OAAKF,UAAU,2BACfE,cAAA,OAAKF,UAAU,4BAEnBE,cAAA,OAAKF,UAAU,0BACfE,cAAA,OAAKF,UAAU,0BACfE,cAAA,OAAKF,UAAU,gCCMhB2B,IAfIA,CAACd,EAAS+C,EAAWrE,KACpC,OAAQsB,GACJ,IAAK,UACD,OAAOX,cAAC+J,EAAQ,IACpB,IAAK,UACD,OAAO/J,cAAC2D,IAAO,IACnB,IAAK,YACD,OAAO3D,cAAC0D,EAAS,CAACrE,KAAMA,IAC5B,IAAK,QACD,OAAOW,cAAC4D,IAAY,IACxB,QACI,MAAM,IAAIC,MAAM,+B","file":"static/js/5.0bab17a8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useEffect, useState } from \"react\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport setContent from \"../../utils/setContent\";\r\n\r\nimport \"./randomChar.scss\";\r\nimport mjolnir from \"../../resources/img/mjolnir.png\";\r\n\r\nconst RandomChar = () => {\r\n  const [char, setChar] = useState({});\r\n  const { getCharacter, clearError, process, setProcess } = useMarvelService();\r\n  useEffect(() => {\r\n    updateChar();\r\n    const timerId = setInterval(updateChar, 30000);\r\n\r\n    return () => {\r\n      clearInterval(timerId);\r\n    }; // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const updateChar = () => {\r\n    clearError();\r\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n    getCharacter(id)\r\n      .then(onCharLoaded)\r\n      .then(() => setProcess(\"confirmed\"));\r\n  };\r\n\r\n  return (\r\n    <div className=\"randomchar\">\r\n      {setContent(process, View, char)}\r\n      <div className=\"randomchar__static\">\r\n        <p className=\"randomchar__title\">\r\n          Random character for today!\r\n          <br />\r\n          Do you want to get to know him better?\r\n        </p>\r\n        <p className=\"randomchar__title\">Or choose another one</p>\r\n        <button onClick={updateChar} className=\"button button__main\">\r\n          <div className=\"inner\">try it</div>\r\n        </button>\r\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ data }) => {\r\n  const { name, description, thumbnail, homepage, wiki } = data;\r\n  let imgStyle = { objectFit: \"cover\" };\r\n  if (\r\n    thumbnail ===\r\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n  ) {\r\n    imgStyle = { objectFit: \"contain\" };\r\n  }\r\n\r\n  return (\r\n    <div className=\"randomchar__block\">\r\n      <img\r\n        src={thumbnail}\r\n        alt=\"Random character\"\r\n        className=\"randomchar__img\"\r\n        style={imgStyle}\r\n      />\r\n      <div className=\"randomchar__info\">\r\n        <p className=\"randomchar__name\">{name}</p>\r\n        <p className=\"randomchar__descr\">{description}</p>\r\n        <div className=\"randomchar__btns\">\r\n          <a href={homepage} className=\"button button__main\">\r\n            <div className=\"inner\">homepage</div>\r\n          </a>\r\n          <a href={wiki} className=\"button button__secondary\">\r\n            <div className=\"inner\">Wiki</div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomChar;\r\n","import React, { useState, useEffect, useRef, useMemo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport \"./charList.scss\";\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n  switch (process) {\r\n    case \"waiting\":\r\n      return <Spinner />;\r\n    case \"loading\":\r\n      return newItemLoading ? <Component /> : <Spinner />;\r\n    case \"confirmed\":\r\n      return <Component />;\r\n    case \"error\":\r\n      return <ErrorMessage />;\r\n    default:\r\n      throw new Error(\"Unexpected process state\");\r\n  }\r\n};\r\nconst CharList = ({ onCharSelected }) => {\r\n  const [charList, setCharList] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(210);\r\n  const [charEnded, setCharEnded] = useState(false);\r\n\r\n  const { getAllCharacters, process, setProcess } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);// eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n    getAllCharacters(offset)\r\n      .then(onCharListLoaded)\r\n      .then(() => setProcess(\"confirmed\"));\r\n  };\r\n\r\n  const onCharListLoaded = (newCharList) => {\r\n    let ended = false;\r\n    if (newCharList.length < 9) {\r\n      ended = true;\r\n    }\r\n    setCharList((charList) => [...charList, ...newCharList]);\r\n\r\n    setNewItemLoading(false);\r\n    setCharEnded(ended);\r\n    setOffset((prev) => prev + 9);\r\n  };\r\n\r\n  const itemRefs = useRef([]);\r\n\r\n  const focusOnItem = (id) => {\r\n    itemRefs.current.forEach((item) =>\r\n      item.classList.remove(\"char__item_selected\")\r\n    );\r\n    itemRefs.current[id].classList.add(\"char__item_selected\");\r\n    itemRefs.current[id].focus();\r\n  };\r\n\r\n  const renderItems = (arr) => {\r\n    const items = arr.map((item, i) => {\r\n      let imgStyle = { objectFit: \"cover\" };\r\n      if (\r\n        item.thumbnail ===\r\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n      ) {\r\n        imgStyle = { objectFit: \"unset\" };\r\n      }\r\n\r\n      return (\r\n        <CSSTransition key={item.id} timeout={400} classNames=\"char__item\">\r\n          <li\r\n            className=\"char__item\"\r\n            tabIndex={0}\r\n            ref={(el) => (itemRefs.current[i] = el)}\r\n            key={item.id}\r\n            onClick={() => {\r\n              onCharSelected(item.id);\r\n              focusOnItem(i);\r\n            }}\r\n            onKeyPress={(e) => {\r\n              if (e.key === \" \" || e.key === \"Enter\") {\r\n                onCharSelected(item.id);\r\n                focusOnItem(i);\r\n              }\r\n            }}\r\n          >\r\n            <img src={item.thumbnail} alt={item.name} style={imgStyle} />\r\n            <div className=\"char__name\">{item.name}</div>\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <ul className=\"char__grid\">\r\n        <TransitionGroup component={null}> {items}</TransitionGroup>\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  const elements = useMemo(() => {\r\n    return setContent(process, () => renderItems(charList), newItemLoading);\r\n    // eslint-disable-next-line\r\n  }, [process]);\r\n\r\n  return (\r\n    <div className=\"char__list\">\r\n      {elements}\r\n      <button\r\n        className=\"button button__main button__long\"\r\n        disabled={newItemLoading}\r\n        style={{ display: charEnded ? \"none\" : \"block\" }}\r\n        onClick={() => onRequest(offset)}\r\n      >\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nCharList.propTypes = {\r\n  onCharSelected: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CharList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport setContent from \"../../utils/setContent\";\r\nimport \"./charInfo.scss\";\r\n\r\nconst CharInfo = ({ charId }) => {\r\n  const [char, setChar] = useState(null);\r\n\r\n  const { getCharacter, clearError, process, setProcess } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateChar(); // eslint-disable-next-line\r\n  }, [charId]);\r\n\r\n  const updateChar = () => {\r\n    if (!charId) {\r\n      return;\r\n    }\r\n\r\n    clearError();\r\n    getCharacter(charId)\r\n      .then(onCharLoaded)\r\n      .then(() => setProcess(\"confirmed\"));\r\n  };\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  return <div className=\"char__info\"> {setContent(process, View, char)}</div>;\r\n};\r\n\r\nconst View = ({ data }) => {\r\n  const { name, description, thumbnail, homepage, wiki, comics } = data;\r\n\r\n  let imgStyle = { objectFit: \"cover\" };\r\n  if (\r\n    thumbnail ===\r\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n  ) {\r\n    imgStyle = { objectFit: \"contain\" };\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"char__basics\">\r\n        <img src={thumbnail} alt={name} style={imgStyle} />\r\n        <div>\r\n          <div className=\"char__info-name\">{name}</div>\r\n          <div className=\"char__btns\">\r\n            <a href={homepage} className=\"button button__main\">\r\n              <div className=\"inner\">homepage</div>\r\n            </a>\r\n            <a href={wiki} className=\"button button__secondary\">\r\n              <div className=\"inner\">Wiki</div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"char__descr\">{description}</div>\r\n      <div className=\"char__comics\">Comics:</div>\r\n      <ul className=\"char__comics-list\">\r\n        {comics.length > 0 ? null : \"There is no comics with this character\"}\r\n        {comics.map((item, i) => {\r\n          // eslint-disable-next-line\r\n          if (i > 9) return;\r\n          return (\r\n            <li key={i} className=\"char__comics-item\">\r\n              {item.name}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nCharInfo.propTypes = {\r\n  charId: PropTypes.number,\r\n};\r\n\r\nexport default CharInfo;\r\n","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({\r\n      error: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import {useState} from 'react';\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './charSearchForm.scss';\r\n\r\nconst CharSearchForm = () => {\r\n    const [char, setChar] = useState(null);\r\n    const {loading, error, getCharacterByName, clearError} = useMarvelService();\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const updateChar = (name) => {\r\n        clearError();\r\n\r\n        getCharacterByName(name)\r\n            .then(onCharLoaded);\r\n    }\r\n\r\n    const errorMessage = error ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\r\n    const results = !char ? null : char.length > 0 ?\r\n                    <div className=\"char__search-wrapper\">\r\n                        <div className=\"char__search-success\">There is! Visit {char[0].name} page?</div>\r\n                        <Link to={`/characters/${char[0].id}`} className=\"button button__secondary\">\r\n                            <div className=\"inner\">To page</div>\r\n                        </Link>\r\n                    </div> : \r\n                    <div className=\"char__search-error\">\r\n                        The character was not found. Check the name and try again\r\n                    </div>;\r\n\r\n    return (\r\n        <div className=\"char__search-form\">\r\n            <Formik\r\n                initialValues = {{\r\n                    charName: ''\r\n                }}\r\n                validationSchema = {Yup.object({\r\n                    charName: Yup.string().required('This field is required')\r\n                })}\r\n                onSubmit = { ({charName}) => {\r\n                    updateChar(charName);\r\n                }}\r\n            >\r\n                <Form>\r\n                    <label className=\"char__search-label\" htmlFor=\"charName\">Or find a character by name:</label>\r\n                    <div className=\"char__search-wrapper\">\r\n                        <Field \r\n                            id=\"charName\" \r\n                            name='charName' \r\n                            type='text' \r\n                            placeholder=\"Enter name\"/>\r\n                        <button \r\n                            type='submit' \r\n                            className=\"button button__main\"\r\n                            disabled={loading}>\r\n                            <div className=\"inner\">find</div>\r\n                        </button>\r\n                    </div>\r\n                    <FormikErrorMessage component=\"div\" className=\"char__search-error\" name=\"charName\" />\r\n                </Form>\r\n            </Formik>\r\n            {results}\r\n            {errorMessage}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharSearchForm;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport CharSearchForm from \"../charSearchForm/CharSearchForm\";\r\n\r\nimport decoration from \"../../resources/img/vision.png\";\r\n\r\nconst MainPage = () => {\r\n  const [selectedChar, setChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setChar(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Marvel information portal\" />\r\n        <title>Marvel information portal</title>\r\n      </Helmet>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoundary>\r\n        <div>\r\n          <ErrorBoundary>\r\n            <CharInfo charId={selectedChar} />\r\n          </ErrorBoundary>\r\n          <ErrorBoundary>\r\n            <CharSearchForm />\r\n          </ErrorBoundary>\r\n        </div>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n  const { request, clearError, process, setProcess } = useHttp();\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=c5d6fc8b83116d92ed468ce36bac6c62';\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : 'There is no description for this character',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || 'There is no description',\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : 'No information about the number of pages',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || 'en-us',\r\n      price: comics.prices.price ? `${comics.prices.price}$` : 'not available',\r\n    };\r\n  };\r\n\r\n  return {\r\n    process,\r\n    setProcess,\r\n    clearError,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getCharacterByName,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [process, setProcess] = useState(\"waiting\");\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setProcess(\"loading\");\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        return data;\r\n      } catch (e) {\r\n        setProcess(\"error\");\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setProcess(\"loading\"), []);\r\n\r\n  return { request, clearError, process, setProcess };\r\n};\r\n","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Skeleton/>;\r\n        case 'loading':\r\n            return <Spinner/>;\r\n        case 'confirmed':\r\n            return <Component data={data}/>;\r\n        case 'error':\r\n            return <ErrorMessage/>;\r\n        default:\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nexport default setContent;"],"sourceRoot":""}